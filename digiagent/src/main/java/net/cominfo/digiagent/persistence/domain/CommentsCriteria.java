package net.cominfo.digiagent.persistence.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CommentsCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public CommentsCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    protected CommentsCriteria(CommentsCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_da_comments
     *
     * @ibatorgenerated Wed Oct 06 10:54:15 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCommentIdIsNull() {
            addCriterion("COMMENT_ID is null");
            return this;
        }

        public Criteria andCommentIdIsNotNull() {
            addCriterion("COMMENT_ID is not null");
            return this;
        }

        public Criteria andCommentIdEqualTo(Integer value) {
            addCriterion("COMMENT_ID =", value, "commentId");
            return this;
        }

        public Criteria andCommentIdNotEqualTo(Integer value) {
            addCriterion("COMMENT_ID <>", value, "commentId");
            return this;
        }

        public Criteria andCommentIdGreaterThan(Integer value) {
            addCriterion("COMMENT_ID >", value, "commentId");
            return this;
        }

        public Criteria andCommentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMMENT_ID >=", value, "commentId");
            return this;
        }

        public Criteria andCommentIdLessThan(Integer value) {
            addCriterion("COMMENT_ID <", value, "commentId");
            return this;
        }

        public Criteria andCommentIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMMENT_ID <=", value, "commentId");
            return this;
        }

        public Criteria andCommentIdIn(List<Integer> values) {
            addCriterion("COMMENT_ID in", values, "commentId");
            return this;
        }

        public Criteria andCommentIdNotIn(List<Integer> values) {
            addCriterion("COMMENT_ID not in", values, "commentId");
            return this;
        }

        public Criteria andCommentIdBetween(Integer value1, Integer value2) {
            addCriterion("COMMENT_ID between", value1, value2, "commentId");
            return this;
        }

        public Criteria andCommentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMMENT_ID not between", value1, value2, "commentId");
            return this;
        }

        public Criteria andCommentRankIsNull() {
            addCriterion("COMMENT_RANK is null");
            return this;
        }

        public Criteria andCommentRankIsNotNull() {
            addCriterion("COMMENT_RANK is not null");
            return this;
        }

        public Criteria andCommentRankEqualTo(String value) {
            addCriterion("COMMENT_RANK =", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankNotEqualTo(String value) {
            addCriterion("COMMENT_RANK <>", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankGreaterThan(String value) {
            addCriterion("COMMENT_RANK >", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENT_RANK >=", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankLessThan(String value) {
            addCriterion("COMMENT_RANK <", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankLessThanOrEqualTo(String value) {
            addCriterion("COMMENT_RANK <=", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankLike(String value) {
            addCriterion("COMMENT_RANK like", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankNotLike(String value) {
            addCriterion("COMMENT_RANK not like", value, "commentRank");
            return this;
        }

        public Criteria andCommentRankIn(List<String> values) {
            addCriterion("COMMENT_RANK in", values, "commentRank");
            return this;
        }

        public Criteria andCommentRankNotIn(List<String> values) {
            addCriterion("COMMENT_RANK not in", values, "commentRank");
            return this;
        }

        public Criteria andCommentRankBetween(String value1, String value2) {
            addCriterion("COMMENT_RANK between", value1, value2, "commentRank");
            return this;
        }

        public Criteria andCommentRankNotBetween(String value1, String value2) {
            addCriterion("COMMENT_RANK not between", value1, value2, "commentRank");
            return this;
        }

        public Criteria andCommentContentIsNull() {
            addCriterion("COMMENT_CONTENT is null");
            return this;
        }

        public Criteria andCommentContentIsNotNull() {
            addCriterion("COMMENT_CONTENT is not null");
            return this;
        }

        public Criteria andCommentContentEqualTo(String value) {
            addCriterion("COMMENT_CONTENT =", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentNotEqualTo(String value) {
            addCriterion("COMMENT_CONTENT <>", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentGreaterThan(String value) {
            addCriterion("COMMENT_CONTENT >", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENT_CONTENT >=", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentLessThan(String value) {
            addCriterion("COMMENT_CONTENT <", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentLessThanOrEqualTo(String value) {
            addCriterion("COMMENT_CONTENT <=", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentLike(String value) {
            addCriterion("COMMENT_CONTENT like", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentNotLike(String value) {
            addCriterion("COMMENT_CONTENT not like", value, "commentContent");
            return this;
        }

        public Criteria andCommentContentIn(List<String> values) {
            addCriterion("COMMENT_CONTENT in", values, "commentContent");
            return this;
        }

        public Criteria andCommentContentNotIn(List<String> values) {
            addCriterion("COMMENT_CONTENT not in", values, "commentContent");
            return this;
        }

        public Criteria andCommentContentBetween(String value1, String value2) {
            addCriterion("COMMENT_CONTENT between", value1, value2, "commentContent");
            return this;
        }

        public Criteria andCommentContentNotBetween(String value1, String value2) {
            addCriterion("COMMENT_CONTENT not between", value1, value2, "commentContent");
            return this;
        }

        public Criteria andCommentStatusIsNull() {
            addCriterion("COMMENT_STATUS is null");
            return this;
        }

        public Criteria andCommentStatusIsNotNull() {
            addCriterion("COMMENT_STATUS is not null");
            return this;
        }

        public Criteria andCommentStatusEqualTo(String value) {
            addCriterion("COMMENT_STATUS =", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusNotEqualTo(String value) {
            addCriterion("COMMENT_STATUS <>", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusGreaterThan(String value) {
            addCriterion("COMMENT_STATUS >", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENT_STATUS >=", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusLessThan(String value) {
            addCriterion("COMMENT_STATUS <", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusLessThanOrEqualTo(String value) {
            addCriterion("COMMENT_STATUS <=", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusLike(String value) {
            addCriterion("COMMENT_STATUS like", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusNotLike(String value) {
            addCriterion("COMMENT_STATUS not like", value, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusIn(List<String> values) {
            addCriterion("COMMENT_STATUS in", values, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusNotIn(List<String> values) {
            addCriterion("COMMENT_STATUS not in", values, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusBetween(String value1, String value2) {
            addCriterion("COMMENT_STATUS between", value1, value2, "commentStatus");
            return this;
        }

        public Criteria andCommentStatusNotBetween(String value1, String value2) {
            addCriterion("COMMENT_STATUS not between", value1, value2, "commentStatus");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("USER_ID =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("USER_ID <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("USER_ID >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USER_ID >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("USER_ID <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("USER_ID <=", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("USER_ID in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("USER_ID not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CREATED_BY is null");
            return this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return this;
        }

        public Criteria andCreatedByEqualTo(String value) {
            addCriterion("CREATED_BY =", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotEqualTo(String value) {
            addCriterion("CREATED_BY <>", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByGreaterThan(String value) {
            addCriterion("CREATED_BY >", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(String value) {
            addCriterion("CREATED_BY >=", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByLessThan(String value) {
            addCriterion("CREATED_BY <", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(String value) {
            addCriterion("CREATED_BY <=", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByLike(String value) {
            addCriterion("CREATED_BY like", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotLike(String value) {
            addCriterion("CREATED_BY not like", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByIn(List<String> values) {
            addCriterion("CREATED_BY in", values, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotIn(List<String> values) {
            addCriterion("CREATED_BY not in", values, "createdBy");
            return this;
        }

        public Criteria andCreatedByBetween(String value1, String value2) {
            addCriterion("CREATED_BY between", value1, value2, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotBetween(String value1, String value2) {
            addCriterion("CREATED_BY not between", value1, value2, "createdBy");
            return this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("CREATED_DATE is null");
            return this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("CREATED_DATE is not null");
            return this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterion("CREATED_DATE =", value, "createdDate");
            return this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterion("CREATED_DATE <>", value, "createdDate");
            return this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterion("CREATED_DATE >", value, "createdDate");
            return this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_DATE >=", value, "createdDate");
            return this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterion("CREATED_DATE <", value, "createdDate");
            return this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_DATE <=", value, "createdDate");
            return this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterion("CREATED_DATE in", values, "createdDate");
            return this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterion("CREATED_DATE not in", values, "createdDate");
            return this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterion("CREATED_DATE between", value1, value2, "createdDate");
            return this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_DATE not between", value1, value2, "createdDate");
            return this;
        }

        public Criteria andLastupdatedByIsNull() {
            addCriterion("LASTUPDATED_BY is null");
            return this;
        }

        public Criteria andLastupdatedByIsNotNull() {
            addCriterion("LASTUPDATED_BY is not null");
            return this;
        }

        public Criteria andLastupdatedByEqualTo(String value) {
            addCriterion("LASTUPDATED_BY =", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByNotEqualTo(String value) {
            addCriterion("LASTUPDATED_BY <>", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByGreaterThan(String value) {
            addCriterion("LASTUPDATED_BY >", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByGreaterThanOrEqualTo(String value) {
            addCriterion("LASTUPDATED_BY >=", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByLessThan(String value) {
            addCriterion("LASTUPDATED_BY <", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByLessThanOrEqualTo(String value) {
            addCriterion("LASTUPDATED_BY <=", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByLike(String value) {
            addCriterion("LASTUPDATED_BY like", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByNotLike(String value) {
            addCriterion("LASTUPDATED_BY not like", value, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByIn(List<String> values) {
            addCriterion("LASTUPDATED_BY in", values, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByNotIn(List<String> values) {
            addCriterion("LASTUPDATED_BY not in", values, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByBetween(String value1, String value2) {
            addCriterion("LASTUPDATED_BY between", value1, value2, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedByNotBetween(String value1, String value2) {
            addCriterion("LASTUPDATED_BY not between", value1, value2, "lastupdatedBy");
            return this;
        }

        public Criteria andLastupdatedDateIsNull() {
            addCriterion("LASTUPDATED_DATE is null");
            return this;
        }

        public Criteria andLastupdatedDateIsNotNull() {
            addCriterion("LASTUPDATED_DATE is not null");
            return this;
        }

        public Criteria andLastupdatedDateEqualTo(Date value) {
            addCriterion("LASTUPDATED_DATE =", value, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateNotEqualTo(Date value) {
            addCriterion("LASTUPDATED_DATE <>", value, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateGreaterThan(Date value) {
            addCriterion("LASTUPDATED_DATE >", value, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LASTUPDATED_DATE >=", value, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateLessThan(Date value) {
            addCriterion("LASTUPDATED_DATE <", value, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateLessThanOrEqualTo(Date value) {
            addCriterion("LASTUPDATED_DATE <=", value, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateIn(List<Date> values) {
            addCriterion("LASTUPDATED_DATE in", values, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateNotIn(List<Date> values) {
            addCriterion("LASTUPDATED_DATE not in", values, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateBetween(Date value1, Date value2) {
            addCriterion("LASTUPDATED_DATE between", value1, value2, "lastupdatedDate");
            return this;
        }

        public Criteria andLastupdatedDateNotBetween(Date value1, Date value2) {
            addCriterion("LASTUPDATED_DATE not between", value1, value2, "lastupdatedDate");
            return this;
        }
    }
}