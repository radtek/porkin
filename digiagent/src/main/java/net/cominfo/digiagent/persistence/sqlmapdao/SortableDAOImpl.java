package net.cominfo.digiagent.persistence.sqlmapdao;

import java.util.List;
import net.cominfo.digiagent.persistence.domain.Sortable;
import net.cominfo.digiagent.persistence.domain.SortableCriteria;

public class SortableDAOImpl extends BaseDao implements SortableDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public SortableDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int countByExample(SortableCriteria example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("t_da_sortable.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int deleteByExample(SortableCriteria example) {
        int rows = getSqlMapClientTemplate().delete("t_da_sortable.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int deleteByPrimaryKey(Integer sortableId) {
        Sortable key = new Sortable();
        key.setSortableId(sortableId);
        int rows = getSqlMapClientTemplate().delete("t_da_sortable.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public void insert(Sortable record) {
        getSqlMapClientTemplate().insert("t_da_sortable.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public void insertSelective(Sortable record) {
        getSqlMapClientTemplate().insert("t_da_sortable.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<Sortable> selectByExample(SortableCriteria example) {
        List<Sortable> list = getSqlMapClientTemplate().queryForList("t_da_sortable.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public Sortable selectByPrimaryKey(Integer sortableId) {
        Sortable key = new Sortable();
        key.setSortableId(sortableId);
        Sortable record = (Sortable) getSqlMapClientTemplate().queryForObject("t_da_sortable.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int updateByExampleSelective(Sortable record, SortableCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_da_sortable.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int updateByExample(Sortable record, SortableCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_da_sortable.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int updateByPrimaryKeySelective(Sortable record) {
        int rows = getSqlMapClientTemplate().update("t_da_sortable.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    public int updateByPrimaryKey(Sortable record) {
        int rows = getSqlMapClientTemplate().update("t_da_sortable.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_da_sortable
     *
     * @ibatorgenerated Thu Dec 09 22:07:35 CST 2010
     */
    private static class UpdateByExampleParms extends SortableCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, SortableCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}