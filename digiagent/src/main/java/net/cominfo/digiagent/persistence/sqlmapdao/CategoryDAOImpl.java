package net.cominfo.digiagent.persistence.sqlmapdao;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import net.cominfo.digiagent.persistence.domain.Category;
import net.cominfo.digiagent.persistence.domain.CategoryCriteria;

public class CategoryDAOImpl extends BaseDao implements CategoryDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public CategoryDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int countByExample(CategoryCriteria example) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"t_da_category.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int deleteByExample(CategoryCriteria example) {
		int rows = getSqlMapClientTemplate().delete(
				"t_da_category.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int deleteByPrimaryKey(Integer categoryId) {
		Category key = new Category();
		key.setCategoryId(categoryId);
		int rows = getSqlMapClientTemplate().delete(
				"t_da_category.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public void insert(Category record) {
		getSqlMapClientTemplate().insert(
				"t_da_category.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public void insertSelective(Category record) {
		getSqlMapClientTemplate().insert(
				"t_da_category.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	@SuppressWarnings("unchecked")
	public List<Category> selectByExample(CategoryCriteria example) {
		List<Category> list = getSqlMapClientTemplate().queryForList(
				"t_da_category.ibatorgenerated_selectByExample", example);
		return list;
	}
	

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public Category selectByPrimaryKey(Integer categoryId) {
		Category key = new Category();
		key.setCategoryId(categoryId);
		Category record = (Category) getSqlMapClientTemplate().queryForObject(
				"t_da_category.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int updateByExampleSelective(Category record,
			CategoryCriteria example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate()
				.update(
						"t_da_category.ibatorgenerated_updateByExampleSelective",
						parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int updateByExample(Category record, CategoryCriteria example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"t_da_category.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int updateByPrimaryKeySelective(Category record) {
		int rows = getSqlMapClientTemplate().update(
				"t_da_category.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	public int updateByPrimaryKey(Category record) {
		int rows = getSqlMapClientTemplate().update(
				"t_da_category.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table t_da_category
	 * @ibatorgenerated  Sat Aug 14 12:47:37 CST 2010
	 */
	private static class UpdateByExampleParms extends CategoryCriteria {
		private Object record;

		public UpdateByExampleParms(Object record, CategoryCriteria example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
	
	// FIXME expend start
	public List<Category> queryListByExample(CategoryCriteria example,  
            PaginationContext paginationContext){
		
		assert paginationContext.getSkipResults() >= 0;  
        assert paginationContext.getMaxResults() >= 0;  
  
        try {  
            final List<Category> result = new ArrayList<Category>();  
            try {  
            	getSqlMapClient().startTransaction();  
                performProductQuery(example, paginationContext, result);  
                getSqlMapClient().commitTransaction();  
            } finally {  
            	getSqlMapClient().endTransaction();  
            }  
            return Collections.unmodifiableList(result);  
        } catch (SQLException e) {  
            throw new RuntimeException(e);  
        }  
		
	}
	
	@SuppressWarnings("unchecked")  
    private void performProductQuery(CategoryCriteria example,  
            PaginationContext paginationContext, final List<Category> result)  
            throws SQLException {  
  
        // Gather total number of results using a separate query  
        if (!paginationContext.hasTotalCount()) {  
            updateTotalCount(example, paginationContext);  
        }  
  
        // iBatis does physical pagination using database cursor if  
        // available using ResultSet.absolute(position);  
        final List<Category> queryForList = getSqlMapClient().queryForList("t_da_category.ibatorgenerated_selectByExample",  
        		example, paginationContext.getSkipResults(),  
                paginationContext.getMaxResults());  
        result.addAll(queryForList);  
    }  
  
    private void updateTotalCount(CategoryCriteria example,  
            PaginationContext paginationContext) throws SQLException {  
        paginationContext.updateTotalCount((Integer) getSqlMapClient()  
                .queryForObject("t_da_category.ibatorgenerated_countByExample", example));  
    } 
	// expend end
}