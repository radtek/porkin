package name.huangzhoujin.mymaven.persistence.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RepositoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public RepositoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRepIdIsNull() {
            addCriterion("REP_ID is null");
            return (Criteria) this;
        }

        public Criteria andRepIdIsNotNull() {
            addCriterion("REP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRepIdEqualTo(Integer value) {
            addCriterion("REP_ID =", value, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdNotEqualTo(Integer value) {
            addCriterion("REP_ID <>", value, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdGreaterThan(Integer value) {
            addCriterion("REP_ID >", value, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("REP_ID >=", value, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdLessThan(Integer value) {
            addCriterion("REP_ID <", value, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdLessThanOrEqualTo(Integer value) {
            addCriterion("REP_ID <=", value, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdIn(List<Integer> values) {
            addCriterion("REP_ID in", values, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdNotIn(List<Integer> values) {
            addCriterion("REP_ID not in", values, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdBetween(Integer value1, Integer value2) {
            addCriterion("REP_ID between", value1, value2, "repId");
            return (Criteria) this;
        }

        public Criteria andRepIdNotBetween(Integer value1, Integer value2) {
            addCriterion("REP_ID not between", value1, value2, "repId");
            return (Criteria) this;
        }

        public Criteria andRepUrlIsNull() {
            addCriterion("REP_URL is null");
            return (Criteria) this;
        }

        public Criteria andRepUrlIsNotNull() {
            addCriterion("REP_URL is not null");
            return (Criteria) this;
        }

        public Criteria andRepUrlEqualTo(String value) {
            addCriterion("REP_URL =", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlNotEqualTo(String value) {
            addCriterion("REP_URL <>", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlGreaterThan(String value) {
            addCriterion("REP_URL >", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlGreaterThanOrEqualTo(String value) {
            addCriterion("REP_URL >=", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlLessThan(String value) {
            addCriterion("REP_URL <", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlLessThanOrEqualTo(String value) {
            addCriterion("REP_URL <=", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlLike(String value) {
            addCriterion("REP_URL like", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlNotLike(String value) {
            addCriterion("REP_URL not like", value, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlIn(List<String> values) {
            addCriterion("REP_URL in", values, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlNotIn(List<String> values) {
            addCriterion("REP_URL not in", values, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlBetween(String value1, String value2) {
            addCriterion("REP_URL between", value1, value2, "repUrl");
            return (Criteria) this;
        }

        public Criteria andRepUrlNotBetween(String value1, String value2) {
            addCriterion("REP_URL not between", value1, value2, "repUrl");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedIsNull() {
            addCriterion("LAST_UPDATED is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedIsNotNull() {
            addCriterion("LAST_UPDATED is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedEqualTo(Date value) {
            addCriterion("LAST_UPDATED =", value, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedNotEqualTo(Date value) {
            addCriterion("LAST_UPDATED <>", value, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedGreaterThan(Date value) {
            addCriterion("LAST_UPDATED >", value, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED >=", value, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedLessThan(Date value) {
            addCriterion("LAST_UPDATED <", value, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED <=", value, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedIn(List<Date> values) {
            addCriterion("LAST_UPDATED in", values, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedNotIn(List<Date> values) {
            addCriterion("LAST_UPDATED not in", values, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED between", value1, value2, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED not between", value1, value2, "lastUpdated");
            return (Criteria) this;
        }

        public Criteria andUsedFlagIsNull() {
            addCriterion("USED_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andUsedFlagIsNotNull() {
            addCriterion("USED_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andUsedFlagEqualTo(String value) {
            addCriterion("USED_FLAG =", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagNotEqualTo(String value) {
            addCriterion("USED_FLAG <>", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagGreaterThan(String value) {
            addCriterion("USED_FLAG >", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagGreaterThanOrEqualTo(String value) {
            addCriterion("USED_FLAG >=", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagLessThan(String value) {
            addCriterion("USED_FLAG <", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagLessThanOrEqualTo(String value) {
            addCriterion("USED_FLAG <=", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagLike(String value) {
            addCriterion("USED_FLAG like", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagNotLike(String value) {
            addCriterion("USED_FLAG not like", value, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagIn(List<String> values) {
            addCriterion("USED_FLAG in", values, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagNotIn(List<String> values) {
            addCriterion("USED_FLAG not in", values, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagBetween(String value1, String value2) {
            addCriterion("USED_FLAG between", value1, value2, "usedFlag");
            return (Criteria) this;
        }

        public Criteria andUsedFlagNotBetween(String value1, String value2) {
            addCriterion("USED_FLAG not between", value1, value2, "usedFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated do_not_delete_during_merge Fri Feb 01 21:19:42 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_MVN_REPOSITORY
     *
     * @mbggenerated Fri Feb 01 21:19:42 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}